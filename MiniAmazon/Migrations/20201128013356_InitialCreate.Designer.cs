// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniAmazon.Database;

namespace MiniAmazon.Migrations
{
    [DbContext(typeof(MiniAmazonDbContext))]
    [Migration("20201128013356_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("MiniAmazon.Models.Productos.Categoria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoriaStatus");

                    b.Property<string>("Descripcion");

                    b.Property<DateTimeOffset>("FechaCreada");

                    b.Property<DateTimeOffset>("FechaModificada");

                    b.Property<string>("MetaDescripcion");

                    b.Property<string>("Nombre");

                    b.Property<string>("Slug");

                    b.Property<bool>("vigente");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("MiniAmazon.Models.Productos.Marca", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<DateTimeOffset>("FechaCreada");

                    b.Property<DateTimeOffset>("FechaModificada");

                    b.Property<int>("MarcaStatus");

                    b.Property<string>("MetaDescripcion");

                    b.Property<string>("Nombre");

                    b.Property<string>("Slug");

                    b.Property<bool>("vigente");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("MiniAmazon.Models.Productos.Producto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CantStock");

                    b.Property<long>("CategoriaId");

                    b.Property<string>("Descripcion");

                    b.Property<DateTimeOffset>("FechaCreada");

                    b.Property<DateTimeOffset>("FechaModificada");

                    b.Property<string>("ImgUrl");

                    b.Property<long>("MarcaId");

                    b.Property<string>("MetaDescripcion");

                    b.Property<string>("Modelo");

                    b.Property<string>("Nombre");

                    b.Property<decimal>("Precio");

                    b.Property<int>("ProductoStatus");

                    b.Property<string>("Slug");

                    b.Property<bool>("vigente");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("MiniAmazon.Models.Productos.Producto", b =>
                {
                    b.HasOne("MiniAmazon.Models.Productos.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MiniAmazon.Models.Productos.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
